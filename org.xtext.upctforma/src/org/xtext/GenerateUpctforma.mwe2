module org.xtext.GenerateUpctforma

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var projectName = "org.xtext.upctforma"
var runtimeProject = "../${projectName}"
var rootPath = ".."

Workflow {
	

bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
  scanClassPath = true
  platformUri = "${runtimeProject}/.."// The following two lines can be removed, if Xbase is not used.
  registerGeneratedEPackage = "org.eclipse.xtext.xbase.XbasePackage"
  
  registerGenModelFile = "platform:/resource/upctforma/model/upctforma.genmodel" 
  uriMap = {
         from	= "http://cpcd.upct.es/upctforma"
         to 	= "platform:/resource/upctforma/model/upctforma.genmodel"
     }
  //registerEcoreFile = "platform:/resource/upctforma/model/upctforma.ecore"
  
  //registerGeneratedEPackage = "upctforma.UpctformaPackage"
}
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.xtext.upctforma"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "org.xtext.Upctforma"
			fileExtensions = "upctforma"
			referencedResource = "platform:/resource/upctforma/model/upctforma.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			formatter = {
				generateStub = true
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			generator = {
				generateXtendMain = true
			}
		}
	}
}
